datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Announcement {
  category    Category?               @relation(fields: [categoryId], references: [id])
  categoryId  String?
  createdAt   DateTime                @default(now())
  description String?
  id          String                  @id @default(cuid())
  images      Json?
  price       Float?
  status      EnumAnnouncementStatus?
  store       Store?                  @relation(fields: [storeId], references: [id])
  storeId     String?
  title       String?
  updatedAt   DateTime                @updatedAt
}

model Store {
  announcements Announcement[]
  createdAt     DateTime       @default(now())
  description   String?
  id            String         @id @default(cuid())
  location      String?
  orders        Order[]
  owner         String?
  storeName     String?
  updatedAt     DateTime       @updatedAt
}

model Order {
  buyer         String?
  createdAt     DateTime                @default(now())
  id            String                  @id @default(cuid())
  paymentMethod EnumOrderPaymentMethod?
  status        EnumOrderStatus?
  store         Store?                  @relation(fields: [storeId], references: [id])
  storeId       String?
  updatedAt     DateTime                @updatedAt
}

model Category {
  announcements  Announcement[]
  createdAt      DateTime       @default(now())
  id             String         @id @default(cuid())
  name           String?
  parentCategory String?
  updatedAt      DateTime       @updatedAt
}

model User {
  createdAt DateTime      @default(now())
  email     String?       @unique
  firstName String?
  id        String        @id @default(cuid())
  lastName  String?
  password  String
  role      EnumUserRole?
  roles     Json
  updatedAt DateTime      @updatedAt
  username  String        @unique
}

enum EnumAnnouncementStatus {
  Option1
}

enum EnumOrderPaymentMethod {
  Option1
}

enum EnumOrderStatus {
  Option1
}

enum EnumUserRole {
  Option1
}
